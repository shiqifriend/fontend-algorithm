// 描述
// 一个数组A中存有 n 个整数，在不允许使用另外数组的前提下，将每个整数循环向右移 M（ M >=0）个位
// 置，即将A中的数据由（A0 A1 ……AN-1 ）变换为（AN-M …… AN-1 A0 A1 ……AN-M-1 ）（最后 M 个数循
// 环移至最前面的 M 个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？

// 输入：
// 6,2,[1,2,3,4,5,6]
// 复制
// 返回值：
// [5,6,1,2,3,4]
// 输入：
// 4,0,[1,2,3,4]
// 复制
// 返回值：
// [1,2,3,4]

/**
 * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
 *
 * 旋转数组
 * @param n int整型 数组长度
 * @param m int整型 右移距离
 * @param a int整型一维数组 给定数组
 * @return int整型一维数组
 */
function solve( n ,  m ,  a ) {
    m = m % n
    return a.slice(n-m).concat(a.slice(0,n-m))
}
module.exports = {
    solve : solve
};